%YAML 1.1
---
# Snapcraft Recipe for TdhCad
# ------------------------------
# This file is in the YAML data serialization format:
# http://yaml.org
# For the spec. of writing this file refer the following documentation:
# * The snapcraft format
#   https://docs.snapcraft.io/the-snapcraft-format/8337
# * Snap Documentation
#   https://docs.snapcraft.io
# * Topics under the doc category in the Snapcraft Forum
#   https://forum.snapcraft.io/c/doc
# For support refer to the snapcraft section in the Snapcraft Forum:
# https://forum.snapcraft.io/c/snapcraft

name: tdhcad-brlin
summary: Vector Graphics Simplified
description: |
  Feature Summary:

  * Click and drag to
      * create entities of many shapes
      * Move, rotate and resize entities
      * Move points to reshape entities
  * Create groups containing entities and other groups
  * Create paths containing lines and curves
  * Copy and paste entire entities or points between entities
  * Change properties including color, width and dashes
  * Apply color gradients to entities and groups
  * Add a note to any entity
  * Use any number of layers
  * Create XY charts anywhere, annotated with CAD entities
  * Export drawings to SVG, PNG or PDF files
  * Save drawings within project databases
  * Use calibrated raster images as background for drawings
  * Automatically create Grids, Legends and Charts
  * More, including Snap, Virtual Points, Arrows and FlipY....

# The path of icon to represent the snap, relative to the source tree directory
# Only PNG or SVG image is supported, dimension must be greater than 256x256px
icon: snap/gui/tdhcad.png

# Version string just for humans, typically '1.2+git' or '1.3.2'
# The wrapping single quotes are often required to avoid the version string
# being accidentally interpreted as a YAML non-string(like '1', '1.2').
# http://yaml.org/type
# https://arp242.net/weblog/yaml_probably_not_so_great_after_all.html#surprising-behaviour
version: determined-by-version-script

# (OPTIONAL) The version string can also be dynamically determined via scripting
# , in this case the value of the `version` key will be ignored (but the key is
# still required).
# NOTE: The resulting version string cannot be longer than 32 characters
version-script: ./snap/local/build-utilities/set-snap-version.bash
#version-script: git -C parts/tdhcad/src describe --always --dirty --tags

# Security confinement
# Use `devmode` to getting started
# Flip to `strict` once you have the right plugs and slots,
# or `classic` once you determine that strict confinement is not currently possible
confinement: strict

# Snap Grade
# Use `devel` to getting started
# Flip to `stable` once you determine that the snap is matured, only `stable` grade
# snaps can be promoted to `candidate` and `stable` channels
grade: stable

# Refer the following documentation for asserting interface plugs and slots in a security confined snap:
# Interface management - doc - snapcraft.io
# https://docs.snapcraft.io/interface-management/6154
# Supported interfaces - doc - snapcraft.io
# https://docs.snapcraft.io/supported-interfaces/7744
# Non-A/C: Non-autoconnect interface
plugs:
  # For snaps with a graphical user interface:
  desktop:
  desktop-legacy:
  x11:
  unity7:
  wayland:

  # Storage access
  home:
  removable-media: # Non-A/C

  # Network access
  #network:

#slots:

# Apps that are exposed by the snap package
# If the _app_name_ is identical with the _snap_name_ it can be directly run
# with `_snap_name_` or `snap run _snap_name_` commands, otherwise it can only be run
# via `_snap_name_._app_name_` or `snap run _snap_name_._app_name_`
apps:
  tdhcad-brlin:
    # The command to run the application, the base command should be an *relative path* to an executable file rooted from the `prime` directory (for `classic` confinement compatiblity, where command search PATHs under $SNAP isn't set for library compatiblity reasons).  The arguments are usually other launchers' *absolute path* rooted from the $SNAP environment variable that are *stacked over* previous ones to consolidate their runtime environment modifications.
    # NOTE: The right angle bracket at the beginning of the value of the `command` keyword starts a YAML folded style block scalar, refer the following spec document for more info: http://yaml.org/spec/1.2/spec.html#id2796251
    command: >
      bin/desktop-launch
      "${SNAP}"/bin/tdhcad-launch
      "${SNAP}"/bin/zenity
        --info
        --ok-label='Got it'
        --title='My Awesome App'
        --text='This is a demonstrative application for Snapcrafters Template Plus.\nIt indicates that the snapped application has been launched properly.'
        --window-icon="${SNAP}"/snap/gui/tdhcad.png
        --width=600

    # If the providing part of the app. has a desktop entry, specify its path relative to the `prime` directory.
    # If the packaging target doesn't provide a desktop entry, ignore the `desktop` key and implement a desktop entry in `/snap/gui`
    #desktop: share/applications/tdhcad.desktop

parts:
  # Utility programs to help with package building
  build-utilities:
    source: snap/local/build-utilities
    plugin: dump
    organize:
      '*': assets/build-utilities/
    prime:
    - -*

  # Launcher programs to fix problems at runtime
  launchers:
    source: snap/local/launchers
    plugin: dump
    organize:
      '*': bin/
    stage:
    - -bin/README.*

  # Program patches to solve issues that can't be solved by tweaking in runtime
  #patches:
    #source: snap/local/patches
    #plugin: dump
    #organize:
      #'*': assets/patches/
    #prime:
    #- -*

  # Helper programs that can be called at snap runtime
  #helpers:
    #source: snap/local/helpers
    #plugin: dump
    #organize:
      #'*': bin/
    #stage:
    #- -bin/README.*

  # Remote part for recording the exact revision for each part during building
  parts-meta-info:

  # Remote part for support of various desktop technologies
  # Refer: https://github.com/ubuntu/snapcraft-desktop-helpers/blob/master/snapcraft.yaml
  desktop-gtk3: # for zenity

  # Optional auxiliary part for displaying simple dialogs for better user experience, powered by Zenity
  # https://forum.snapcraft.io/t/the-zenity-remote-part/8793
  zenity:
    # This part or part recipe is needed until LP#1766878 is fixed
    #
    # Bug #1766878 “$SNAPCRAFT_PROJECT_NAME used in a remote part expands to wrong value” : Bugs : Snapcraft
    # https://bugs.launchpad.net/snapcraft/+bug/1766878
    configflags:
    - --datarootdir=/snap/$SNAPCRAFT_PROJECT_NAME/current/share
    - --disable-libnotify
    - --disable-webkitgtk
    organize:
      snap/$SNAPCRAFT_PROJECT_NAME/current: /

  tdhcad:
    after:
    - build-utilities # for patch-desktop-entries.*

    source: snap/local/empty
    #source-type:
    #source-tag:
    #source-depth:

    plugin: nil

    override-stage: |
      set \
        -o errexit \
        -o nounset

      snapcraftctl stage

      ./assets/build-utilities/patch-desktop-entries.bash
